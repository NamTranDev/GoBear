apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion rootProject.compileSdkVersion
    defaultConfig {
        minSdkVersion rootProject.minSdkVersion
        targetSdkVersion rootProject.targetSdkVersion

        buildConfigField "String", "LINK_RSS", "\"https://vnexpress.net/rss/tin-moi-nhat.rss\""
        buildConfigField "String", "DB_KEY", "\"NamTranDev\""
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility rootProject.java_version
        targetCompatibility rootProject.java_version
    }
}

kapt {
    generateStubs = true
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    testImplementation "junit:junit:$rootProject.junit"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    //room sql
    api "androidx.room:room-runtime:$rootProject.room"
    testImplementation "androidx.room:room-testing:$rootProject.room"
    kapt "androidx.room:room-compiler:$rootProject.room"

    // Retrofit2
    implementation "com.squareup.retrofit2:retrofit:$rootProject.retrofit2"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$rootProject.retrofit2"
    api "com.squareup.retrofit2:converter-gson:$rootProject.retrofit2"
    implementation "com.squareup.retrofit2:adapter-rxjava:$rootProject.retrofit2"
    implementation "com.squareup.okhttp3:logging-interceptor:$rootProject.okhttp3"

    //dagger
    kapt "com.google.dagger:dagger-android-processor:$rootProject.dagger"
    kapt "com.google.dagger:dagger-compiler:$rootProject.dagger"
    api "com.google.dagger:dagger:$rootProject.dagger"
    api "com.google.dagger:dagger-android:$rootProject.dagger"
    api "com.google.dagger:dagger-android-support:$rootProject.dagger"
    api "androidx.paging:paging-runtime:$rootProject.paging"

    //live data
    api "androidx.lifecycle:lifecycle-runtime:$rootProject.lifecycle"
    api "androidx.lifecycle:lifecycle-extensions:$rootProject.lifecycle"
    kapt "androidx.lifecycle:lifecycle-compiler:$rootProject.lifecycle"
    implementation "net.zetetic:android-database-sqlcipher:$rootProject.sqlcipher"

    testImplementation "android.arch.core:core-testing:1.1.1"
    testImplementation 'androidx.test:runner:1.1.1'
    testImplementation 'androidx.test.espresso:espresso-core:3.1.1'

    // required if you want to use Mockito for unit tests
    testImplementation 'org.mockito:mockito-core:2.22.0'
}
